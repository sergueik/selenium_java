<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~    Copyright 2017 Frederic Thevenet
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~         http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  ~
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>eu.fthevenet</groupId>
  <artifactId>binjr</artifactId>
  <name>binjr</name>
  <url>http://www.binjr.eu</url>
  <version>2.0.0.beta-SNAPSHOT</version>
  <packaging>jar</packaging>
  <description>Flexible Time Series Visualization</description>
  <organization>
    <name>Frederic Thevenet</name>
    <url>http://www.fthevenet.eu/</url>
  </organization>
  <developers>
    <developer>
      <name>Frederic Thevenet</name>
      <url>http://www.fthevenet.eu/</url>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <properties>
    <detailedDescription>
            binjr is a Java based, open source, time series visualization tool.
            It can plot time series data from multiple sources as a set of charts,
            which end users can navigate or zoom in and out.
        </detailedDescription>
    <license.name>Apache Software License 2.0</license.name>
    <License.url>http://www.apache.org/licenses/LICENSE-2.0</License.url>
    <license.shortName>ASL 2.0</license.shortName>
    <releaseUrl>https://github.com/fthevenet/binjr/releases</releaseUrl>
    <helpUrl>https://github.com/fthevenet/binjr/wiki</helpUrl>
    <github.global.server>github</github.global.server>
    <project.scm.id>${github.global.server}</project.scm.id>
    <skipDeploy>true</skipDeploy>
    <openjfx.scope>compile</openjfx.scope>
    <openjfx.version>11.0.1</openjfx.version>
  </properties>
  <scm>
    <connection>scm:git:https://github.com/fthevenet/binjr.git</connection>
    <url>https://github.com/fthevenet/binjr</url>
    <developerConnection>scm:git:https://github.com/fthevenet/binjr.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <profiles>
    <profile>
      <id>create-runtime-image-windows-x64</id>
      <properties>
        <binjr.deploy.launcher>${project.basedir}/src/main/deploy/windows/binjr.exe</binjr.deploy.launcher>
        <binjr.deploy.jdk>openjdk-11_windows-x64</binjr.deploy.jdk>
        <binjr.deploy.format>zip</binjr.deploy.format>
        <binjr.deploy.openjfx.jmods.path>${project.build.directory}/openjfx-${binjr.deploy.jdk}</binjr.deploy.openjfx.jmods.path>
        <binjr.deploy.openjfx.jmods.url>https://gluonhq.com/download/javafx-${openjfx.version}-jmods-windows/</binjr.deploy.openjfx.jmods.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>download-maven-plugin</artifactId>
            <version>1.4.1</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>wget</goal>
                </goals>
                <configuration>
                  <skipCache>true</skipCache>
                  <url>${binjr.deploy.openjfx.jmods.url}</url>
                  <unpack>true</unpack>
                  <outputDirectory>${binjr.deploy.openjfx.jmods.path}</outputDirectory>
                  <outputFileName>javafx-${openjfx.version}-jmods.zip</outputFileName>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.moditect</groupId>
            <artifactId>moditect-maven-plugin</artifactId>
            <version>1.0.0.Beta1</version>
            <executions>
              <execution>
                <id>create-dependency-image</id>
                <phase>package</phase>
                <goals>
                  <goal>create-runtime-image</goal>
                </goals>
                <configuration>
                  <modulePath>
                    <path>${binjr.deploy.openjfx.jmods.path}/javafx-jmods-${openjfx.version}</path>
                  </modulePath>
                  <modules>
                    <!-- Common modules for all platforms -->
                    <module>javafx.controls</module>
                    <module>javafx.fxml</module>
                    <module>javafx.swing</module>
                    <module>java.base</module>
                    <module>java.prefs</module>
                    <module>java.sql</module>
                    <module>java.xml</module>
                    <module>java.management</module>
                    <module>java.rmi</module>
                    <module>java.management.rmi</module>
                    <module>jdk.management.agent</module>
                    <module>jdk.security.auth</module>
                    <module>jdk.management</module>
                    <module>jdk.management.jfr</module>
                    <module>jdk.zipfs</module>
                    <module>jdk.unsupported.desktop</module>
                    <!-- Platform specific -->
                    <module>jdk.crypto.mscapi</module>
                  </modules>
                  <compression>2</compression>
                  <stripDebug>true</stripDebug>
                  <excludedResources>
                                    </excludedResources>
                  <outputDirectory>${project.build.directory}/${binjr.deploy.jdk}-image</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>create-runtime-image-linux-x64</id>
      <properties>
        <binjr.deploy.launcher>${project.basedir}/src/main/deploy/linux/binjr</binjr.deploy.launcher>
        <binjr.deploy.jdk>openjdk-11_linux-x64</binjr.deploy.jdk>
        <binjr.deploy.format>tar.gz</binjr.deploy.format>
        <binjr.deploy.openjfx.jmods.path>${project.build.directory}/openjfx-${binjr.deploy.jdk}</binjr.deploy.openjfx.jmods.path>
        <binjr.deploy.openjfx.jmods.url>https://gluonhq.com/download/javafx-${openjfx.version}-jmods-linux/</binjr.deploy.openjfx.jmods.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>download-maven-plugin</artifactId>
            <version>1.3.0</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>wget</goal>
                </goals>
                <configuration>
                  <url>${binjr.deploy.openjfx.jmods.url}</url>
                  <unpack>true</unpack>
                  <outputDirectory>${binjr.deploy.openjfx.jmods.path}</outputDirectory>
                  <outputFileName>javafx-${openjfx.version}-jmods.zip</outputFileName>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.moditect</groupId>
            <artifactId>moditect-maven-plugin</artifactId>
            <version>1.0.0.Beta1</version>
            <executions>
              <execution>
                <id>create-dependency-image</id>
                <phase>package</phase>
                <goals>
                  <goal>create-runtime-image</goal>
                </goals>
                <configuration>
                  <modulePath>
                    <path>${binjr.deploy.openjfx.jmods.path}/javafx-jmods-${openjfx.version}</path>
                  </modulePath>
                  <modules>
                    <!-- Common modules for all platforms -->
                    <module>javafx.controls</module>
                    <module>javafx.fxml</module>
                    <module>javafx.swing</module>
                    <module>java.base</module>
                    <module>java.prefs</module>
                    <module>java.sql</module>
                    <module>java.xml</module>
                    <module>java.management</module>
                    <module>java.rmi</module>
                    <module>java.management.rmi</module>
                    <module>jdk.management.agent</module>
                    <module>jdk.management.jfr</module>
                    <module>jdk.security.auth</module>
                    <module>jdk.management</module>
                    <module>jdk.zipfs</module>
                    <module>jdk.unsupported.desktop</module>
                    <!-- Platform specific -->
                  </modules>
                  <compression>2</compression>
                  <stripDebug>true</stripDebug>
                  <excludedResources>
                                    </excludedResources>
                  <outputDirectory>${project.build.directory}/${binjr.deploy.jdk}-image</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>create-runtime-image-macos-x64</id>
      <properties>
        <binjr.deploy.launcher>${project.basedir}/src/main/deploy/macos/binjr</binjr.deploy.launcher>
        <binjr.deploy.jdk>openjdk-11_macos-x64</binjr.deploy.jdk>
        <binjr.deploy.format>tar.gz</binjr.deploy.format>
        <binjr.deploy.openjfx.jmods.path>${project.build.directory}/openjfx-${binjr.deploy.jdk}</binjr.deploy.openjfx.jmods.path>
        <binjr.deploy.openjfx.jmods.url>https://gluonhq.com/download/javafx-${openjfx.version}-jmods-mac/</binjr.deploy.openjfx.jmods.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>download-maven-plugin</artifactId>
            <version>1.3.0</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>wget</goal>
                </goals>
                <configuration>
                  <url>${binjr.deploy.openjfx.jmods.url}</url>
                  <unpack>true</unpack>
                  <outputDirectory>${binjr.deploy.openjfx.jmods.path}</outputDirectory>
                  <outputFileName>javafx-${openjfx.version}-jmods.zip</outputFileName>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.moditect</groupId>
            <artifactId>moditect-maven-plugin</artifactId>
            <version>1.0.0.Beta1</version>
            <executions>
              <execution>
                <id>create-dependency-image</id>
                <phase>package</phase>
                <goals>
                  <goal>create-runtime-image</goal>
                </goals>
                <configuration>
                  <modulePath>
                    <path>${binjr.deploy.openjfx.jmods.path}/javafx-jmods-${openjfx.version}</path>
                  </modulePath>
                  <modules>
                    <!-- Common modules for all platforms -->
                    <module>javafx.controls</module>
                    <module>javafx.fxml</module>
                    <module>javafx.swing</module>
                    <module>java.base</module>
                    <module>java.prefs</module>
                    <module>java.sql</module>
                    <module>java.xml</module>
                    <module>java.management</module>
                    <module>java.rmi</module>
                    <module>java.management.rmi</module>
                    <module>jdk.management.agent</module>
                    <module>jdk.management.jfr</module>
                    <module>jdk.security.auth</module>
                    <module>jdk.management</module>
                    <module>jdk.zipfs</module>
                    <module>jdk.unsupported.desktop</module>
                    <!-- Platform specific -->
                  </modules>
                  <compression>2</compression>
                  <stripDebug>true</stripDebug>
                  <excludedResources>
                                    </excludedResources>
                  <outputDirectory>${project.build.directory}/${binjr.deploy.jdk}-image</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>package-runtime-image</id>
      <properties>
        <openjfx.scope>provided</openjfx.scope>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.ruleoftech</groupId>
            <artifactId>markdown-page-generator-plugin</artifactId>
            <version>2.1.0</version>
            <executions>
              <execution>
                <id>generate-readme</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <headerHtmlFile>${project.basedir}/src/main/deploy/html/header.html</headerHtmlFile>
                  <inputDirectory>${project.basedir}/src/main/deploy/</inputDirectory>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>package</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>binjr-${binjr.deploy.jdk}</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/assembly-dist.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <!--<finalName>${project.name}</finalName>-->
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <archive>
            <index>true</index>
            <manifestEntries>
              <Main-Class>eu.fthevenet.binjr.Bootstrap</Main-Class>
              <Specification-Title>${project.name}</Specification-Title>
              <Specification-Version>${project.version}</Specification-Version>
              <Specification-Vendor>${project.organization.name}</Specification-Vendor>
              <Implementation-Title>${project.name}</Implementation-Title>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              <SplashScreen-Image>images/splashscreen.png</SplashScreen-Image>
              <Build-Number>${env.BINJR_BUILD_NUMBER}</Build-Number>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>eu.fthevenet.binjr.Binjr</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.17.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.6</version>
    </dependency>
    <dependency>
      <groupId>org.controlsfx</groupId>
      <artifactId>controlsfx</artifactId>
      <version>8.40.13</version>
    </dependency>
    <dependency>
      <groupId>org.gillius</groupId>
      <artifactId>jfxutils</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>2.4.0-b180725.0644</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.4.0-b180830.0359</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${openjfx.version}</version>
      <scope>${openjfx.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${openjfx.version}</version>
      <scope>${openjfx.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>${openjfx.version}</version>
      <scope>${openjfx.scope}</scope>
    </dependency>
  </dependencies>
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
</project>
