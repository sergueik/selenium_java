<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.stackoverflow</groupId>
  <artifactId>dynamic</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>${project.groupId}:${project.artifactId}</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <commons-exec.version>1.3</commons-exec.version>
    <commons-io.version>2.5</commons-io.version>
    <commons-lang.version>2.6</commons-lang.version>
    <commons-collections4.version>4.1</commons-collections4.version>
    <java.version>1.8</java.version>
    <junit.version>4.12</junit.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
    <!-- http://stackoverflow.com/questions/39310090/selenium-upgrade-error -->
    <selenium.version>3.13.0</selenium.version>
    <selenium-chrome-driver.version>${selenium.version}</selenium-chrome-driver.version>
    <selenium-firefox-driver.version>${selenium.version}</selenium-firefox-driver.version>
  </properties>
  <dependencies>
	  <dependency>
	      <groupId>org.slf4j</groupId>
	          <artifactId>slf4j-api</artifactId>
		      <version>1.7.25</version>
	      </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>${commons-exec.version}</version>
    </dependency>
    <dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-collections4</artifactId>
    <version>${commons-collections4.version}</version>
    </dependency>
    <dependency>
      <groupId>com.jcabi</groupId>
      <artifactId>jcabi-matchers</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-firefox-driver</artifactId>
      <version>${selenium-firefox-driver.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <!-- Separates the unit tests from the integration tests. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Skip the default running of this plug-in (or everything is run twice...see below) -->
          <skip>true</skip>
          <!-- Show 100% of the lines from the stack trace (doesn't work) -->
          <trimStackTrace>false</trimStackTrace>
        </configuration>
        <executions>
          <execution>
            <id>unit-tests</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!-- Never skip running the tests when the test phase is invoked -->
              <skip>false</skip>
              <includes>
                <!-- Include unit tests within integration-test phase. -->
                <include>**/*Test.java</include>
              </includes>
              <excludes>
                <!-- Exclude integration tests within (unit) test phase. -->
                <exclude>**/*IntegrationTest.java</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!-- Never skip running the tests when the integration-test phase is invoked -->
              <skip>false</skip>
              <includes>
                <!-- Include integration tests within integration-test phase. -->
                <include>**/*IntegrationTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <goals>
          <goal>compile</goal>
        </goals>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>utf-8</encoding>
          <compilerArgument>-Xlint:all</compilerArgument>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <!--
          <compilerArgument>-verbose</compilerArgument>
          -->
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
