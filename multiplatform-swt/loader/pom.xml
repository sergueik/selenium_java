<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.janprach.multiplatform-swt</groupId>
  <artifactId>multiplatform-swt-loader</artifactId>
  <version>4.6</version>
  <properties>
    <lib.directory>lib</lib.directory>
    <swt.version>4.6</swt.version>
    <spring-boot-loader.version>1.3.6.RELEASE</spring-boot-loader.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-loader</artifactId>
      <version>${spring-boot-loader.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.swt</groupId>
      <artifactId>${swt.artifactId}</artifactId>
      <version>${swt.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>package</defaultGoal>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <!-- We copy all the swt jars using dependency plugin into a directory -->
      <!-- from where the assembly plugin will pick them for the final package. -->
      <!-- The dependency plugin utilize maven's dependency resolution mechanism -->
      <!-- and maven's repositories. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <!-- <stripVersion>true</stripVersion> -->
              <outputDirectory>${project.build.directory}/${lib.directory}</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.swt</groupId>
                  <artifactId>org.eclipse.swt.cocoa.macosx.x86_64</artifactId>
                  <version>${swt.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.swt</groupId>
                  <artifactId>org.eclipse.swt.gtk.linux.x86</artifactId>
                  <version>${swt.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.swt</groupId>
                  <artifactId>org.eclipse.swt.gtk.linux.x86_64</artifactId>
                  <version>${swt.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.swt</groupId>
                  <artifactId>org.eclipse.swt.win32.win32.x86</artifactId>
                  <version>${swt.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.swt</groupId>
                  <artifactId>org.eclipse.swt.win32.win32.x86_64</artifactId>
                  <version>${swt.version}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Assembly plugin builds the final multiplatform jar package. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/multiplatform.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Testing multiplatform swt jar has to be done after packaging. -->
      <!-- Hence they run in verify phase using failsafe plugin. You don't -->
      <!-- need to copy this to your project. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <workingDirectory>${project.build.directory}</workingDirectory>
          <additionalClasspathElements>
            <additionalClasspathElement>${project.build.directory}/${project.build.finalName}-multiplatform.jar</additionalClasspathElement>
          </additionalClasspathElements>
          <classpathDependencyExcludes>
            <classpathDependencyExclude>org.eclipse.swt:*</classpathDependencyExclude>
          </classpathDependencyExcludes>
          <systemProperties>
            <name>SWT-Version</name>
            <value>${swt.version}</value>
          </systemProperties>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <!-- The profiles are used to select correct swt artifact at compile -->
  <!-- (and development) time. We will have all of them at the runtime. -->
  <!-- That's the goal of this project ;-) You can manually force -->
  <!-- different profile by maven's command line argument -P -->
  <profiles>
    <profile>
      <id>linux32</id>
      <activation>
        <os>
          <family>linux</family>
          <arch>i386</arch>
        </os>
      </activation>
      <properties>
        <swt.artifactId>org.eclipse.swt.gtk.linux.x86</swt.artifactId>
      </properties>
    </profile>
    <profile>
      <id>linux64</id>
      <activation>
        <os>
          <family>linux</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <swt.artifactId>org.eclipse.swt.gtk.linux.x86_64</swt.artifactId>
      </properties>
    </profile>
    <profile>
      <id>macosx64</id>
      <activation>
        <os>
          <family>macosx</family>
          <arch>x86_64</arch>
        </os>
      </activation>
      <properties>
        <swt.artifactId>org.eclipse.swt.cocoa.macosx.x86_64</swt.artifactId>
      </properties>
    </profile>
    <profile>
      <id>win32</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>x86</arch>
        </os>
      </activation>
      <properties>
        <swt.artifactId>org.eclipse.swt.win32.win32.x86</swt.artifactId>
      </properties>
    </profile>
    <profile>
      <id>win64</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <swt.artifactId>org.eclipse.swt.win32.win32.x86_64</swt.artifactId>
      </properties>
    </profile>
  </profiles>
  <repositories>
    <!-- There's no official public maven eclipse repository yet. Leon Blakey -->
    <!-- has created https://github.com/maven-eclipse/maven-eclipse.github.io. -->
    <repository>
      <id>maven-eclipse-repo</id>
      <url>http://maven-eclipse.github.io/maven</url>
    </repository>
  </repositories>
</project>
